package com.dkapps.grokchef.data.model

import com.google.gson.annotations.SerializedName

/**
 * Represents the full response body from the Grok Chat Completions API.
 * This structure is typical for both text-only and multi-modal (image understanding) completions.
 * https://docs.x.ai/docs/guides/image-understanding
 */
data class GrokImageCompletionResponse(
    val id: String,
    @SerializedName("object")
    val responseObject: String, // Should be "chat.completion"
    val created: Long,    // Unix timestamp when the completion was created
    val model: String,    // The model that generated the response, e.g., "grok-1.0-pro"
    val choices: List<Choice>, // A list of completion choices (usually one)
    val usage: Usage      // Information about token usage
)

/**
 * Represents a single completion choice within the response.
 */
data class Choice(
    val index: Int,        // The index of this choice in the list of choices
    val message: AssistantMessage, // The message generated by the assistant
    @SerializedName("finish_reason")
    val finishReason: String // The reason the model stopped generating, e.g., "stop", "length"
)

/**
 * Represents the assistant's message, containing the generated content.
 */
data class AssistantMessage(
    val role: String, // Should be "assistant"
    val content: String // The actual text generated by the model based on the prompt and image
)

/**
 * Provides details on the token usage for the request and response.
 */
data class Usage(
    @SerializedName("prompt_tokens")
    val promptTokens: Int,      // Number of tokens in the input prompt (including image tokens if applicable)
    @SerializedName("completion_tokens")
    val completionTokens: Int,  // Number of tokens in the generated completion
    @SerializedName("total_tokens")
    val totalTokens: Int        // Total number of tokens used (prompt_tokens + completion_tokens)
)